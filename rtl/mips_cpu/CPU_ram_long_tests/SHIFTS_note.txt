100011 00000 00001 0000 0000 0010 1000
1000 1100 0000 0001 0000 0000 0010 1000
8    C    0    1    0    0    2    8
opcode rs    rt    offset //LW r[1] = MEM(rs+offset) result r[1]= 8001 0002

100011 00000 00011 0000 0000 0010 1100
8    C    0    3    0    0    2    C
opcode rs    rt    offset //LW r[2] = MEM(rs+offset) result r[3]= 0000 0001


000000 00000 00001 00010 00010 000000
0000 0000 0000 0001 0001 0000 1000 0000
0    0    0    1    1    0    8    0
opcode  0    rt   rd   sa   SLL //SLL result r[2] = r[1] (=8001 0002) << by 2 bits = 0004 0008

000000 00011 00001 00010 00010 000100
0000 0000 0110 0001 0001 0000 1000 0100
0    0    6    1    1    0    8    4
opcode  rs    rt   rd   sa   SLLV //SLLV result r[2] = r[1] (=8001 0002) << by rs(=1) bits = 0002 0004



000000 00000 00001 00010 00010 000010
0000 0000 0000 0001 0001 0000 1000 0010
0    0    0    1    1    0    8    2
opcode  0    rt   rd   sa   SRL //SRL result r[2] = r[1] (=8001 0002) >> by 2 bits = 2000 4000

000000 00011 00001 00010 00010 000110
0000 0000 0110 0001 0001 0000 1000 0110
0    0    6    1    1    0    8    6
opcode  rs    rt   rd   sa   SRLV //SRLV result r[2] = r[1] (=8001 0002) >> by rs(=1) bits = 4000 8001



000000 00000 00001 00010 00010 000011
0000 0000 0000 0001 0001 0000 1000 0011
0    0    0    1    1    0    8    3
opcode  0    rt   rd   sa   SRA //SRA result r[2] = r[1] (=8001 0002) >>> by 2 bits = E000 4000


000000 00011 00001 00010 00010 000111
0000 0000 0110 0001 0001 0000 1000 0111
0    0    6    1    1    0    8    7
opcode  rs    rt   rd   sa   SRAV //SRAV result r[2] = r[1] (=8001 0002) >>> by rs(=1) bits = C000 8001


address [40] = 8001 0002
address [44] = 0000 0001
