100011 00000 00001 00000 00000 011100 
1000 1100 0000 0001 0000 0000 0001 1100
8    C    0    1    0    0    1    C
opcode rs    rt    offset //LW r[1] = MEM[rs+offset] MEM[28] result r[1] = 0x04

000000 00000 00001 00010 00000 100001
0000 0000 0000 0001 0001 0000 0010 0001
0    0    0    1    1    0    2    1
opcode rs    rt    rd    00000 100001 //ADDU r[2] = r[1] + r[0] result r[2] = 0x04

001001 00010 00011 00000 00000 000100
0010 0100 0100 0011 0000 0000 0000 0100
2    4    4    3    0    0    0    4
opcode rs    rt    immediate 0b100 //ADDIU r[3] = r[2] + 4 result r[3] = 0x08

000000 00001 00000 00000 00000 001000
0000 0000 0010 0000 0000 0000 0000 1000
//0000 0000 0000 0000 0000 1000 0000 1000
0    0    2    0    0    0    0    8
opcode rs    zeros             fun_code //JR r[1] result PC = 0x04

101011 00010 00011 00000 00000 010100
1010 1100 0100 0011 0000 0000 0001 0100
A    C    4    3    0    0    1    4
opcode rs    rt    offset //SW MEM[20] = 0x08 result not changing because of JR instruction