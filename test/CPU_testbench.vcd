$date
	Tue Dec 14 12:15:04 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module CPU_testbench $end
$var wire 32 ! writedata [31:0] $end
$var wire 1 " write $end
$var wire 1 # waitrequest $end
$var wire 3 $ state [2:0] $end
$var wire 32 % register_v0 [31:0] $end
$var wire 32 & readdata_to_CPU [31:0] $end
$var wire 32 ' readdata [31:0] $end
$var wire 1 ( read $end
$var wire 4 ) byteenable [3:0] $end
$var wire 32 * address [31:0] $end
$var wire 1 + active $end
$var reg 1 , clk $end
$var reg 1 - reset $end
$var integer 32 . counter [31:0] $end
$scope module datapath $end
$var wire 1 , clk $end
$var wire 1 - reset $end
$var wire 3 / state_pass_to_testbench [2:0] $end
$var wire 1 0 zero $end
$var wire 32 1 writedata [31:0] $end
$var wire 1 " write $end
$var wire 1 # waitrequest $end
$var wire 1 2 unsign $end
$var wire 3 3 state [2:0] $end
$var wire 1 4 stall $end
$var wire 32 5 register_v0 [31:0] $end
$var wire 32 6 readdata_to_CPU [31:0] $end
$var wire 32 7 readdata2 [31:0] $end
$var wire 32 8 readdata1 [31:0] $end
$var wire 32 9 readdata [31:0] $end
$var wire 5 : readR2 [4:0] $end
$var wire 5 ; readR1 [4:0] $end
$var wire 1 ( read $end
$var wire 32 < pc_in [31:0] $end
$var wire 6 = instr31_26 [5:0] $end
$var wire 5 > instr25_21 [4:0] $end
$var wire 5 ? instr20_16 [4:0] $end
$var wire 5 @ instr15_11 [4:0] $end
$var wire 16 A instr15_0 [15:0] $end
$var wire 5 B instr10_6 [4:0] $end
$var wire 32 C full_instr [31:0] $end
$var wire 1 D fixed_shift $end
$var wire 4 E byteenable [3:0] $end
$var wire 1 F branch_equal $end
$var wire 32 G address [31:0] $end
$var wire 1 + active $end
$var wire 5 H Regmux2to1 [4:0] $end
$var wire 32 I RegWritemux2to1 [31:0] $end
$var wire 1 J RegWrite $end
$var wire 1 K RegDst $end
$var wire 1 L PCWriteCond $end
$var wire 1 M PCWrite $end
$var wire 2 N PCSource [1:0] $end
$var wire 32 O PC [31:0] $end
$var wire 1 P MemtoReg $end
$var wire 32 Q LO [31:0] $end
$var wire 1 R JUMP $end
$var wire 1 S IorD $end
$var wire 1 T IRWrite $end
$var wire 32 U HI_LO_ALUOut_to_Reg_mux [31:0] $end
$var wire 2 V HI_LO_ALUOut [1:0] $end
$var wire 32 W HI [31:0] $end
$var wire 32 X Decodemux2to1 [31:0] $end
$var wire 4 Y ALUctl [3:0] $end
$var wire 32 Z ALU_result [31:0] $end
$var wire 64 [ ALU_MULTorDIV_result [63:0] $end
$var wire 2 \ ALUSrcB [1:0] $end
$var wire 1 ] ALUSrcA $end
$var wire 32 ^ ALUB [31:0] $end
$var wire 32 _ ALUAmux2to1 [31:0] $end
$var reg 32 ` ALUOut [31:0] $end
$var reg 32 a regA [31:0] $end
$var reg 32 b regB [31:0] $end
$scope module ALU $end
$var wire 32 c a [31:0] $end
$var wire 5 d instr10_6 [4:0] $end
$var wire 1 0 zero $end
$var wire 1 2 unsign $end
$var wire 1 D fixed_shift $end
$var wire 1 F branch_equal $end
$var wire 32 e b [31:0] $end
$var wire 33 f B_unsign [32:0] $end
$var wire 33 g A_unsign [32:0] $end
$var wire 4 h ALUOperation [3:0] $end
$var reg 64 i ALU_MULTorDIV_result [63:0] $end
$var reg 32 j ALU_result [31:0] $end
$var reg 66 k ALU_temp_MULTorDIV_result [65:0] $end
$var reg 33 l ALU_temp_result [32:0] $end
$var reg 32 m quotient [31:0] $end
$var reg 33 n quotient_unsign [32:0] $end
$var reg 32 o remainder [31:0] $end
$var reg 33 p remainder_unsign [32:0] $end
$upscope $end
$scope module ALUmux4to1 $end
$var wire 6 q opcode [5:0] $end
$var wire 32 r register_b [31:0] $end
$var wire 16 s immediate [15:0] $end
$var wire 2 t ALUSrcB [1:0] $end
$var reg 32 u ALUB [31:0] $end
$var reg 32 v shift_2 [31:0] $end
$var reg 32 w sign_extended [31:0] $end
$upscope $end
$scope module HI_LO_ControlInst $end
$var wire 64 x ALU_MULTorDIV_result [63:0] $end
$var wire 1 , clk $end
$var wire 6 y func_code [5:0] $end
$var wire 6 z opcode [5:0] $end
$var wire 32 { regA [31:0] $end
$var wire 1 - reset $end
$var wire 3 | state [2:0] $end
$var wire 6 } final_code [5:0] $end
$var wire 2 ~ HI_LO_ALUOut [1:0] $end
$var reg 32 !" HI [31:0] $end
$var reg 32 "" LO [31:0] $end
$upscope $end
$scope module IR $end
$var wire 1 , clk $end
$var wire 1 - reset $end
$var wire 32 #" memdata [31:0] $end
$var wire 1 T IRWrite $end
$var reg 16 $" instr15_0 [15:0] $end
$var reg 5 %" instr20_16 [4:0] $end
$var reg 5 &" instr25_21 [4:0] $end
$var reg 6 '" instr31_26 [5:0] $end
$upscope $end
$scope module control $end
$var wire 6 (" func_code [5:0] $end
$var wire 6 )" opcode [5:0] $end
$var wire 5 *" rt_code [4:0] $end
$var wire 3 +" state [2:0] $end
$var reg 1 ] ALUSrcA $end
$var reg 2 ," ALUSrcB [1:0] $end
$var reg 4 -" ALUctl [3:0] $end
$var reg 1 T IRWrite $end
$var reg 1 S IorD $end
$var reg 1 R JUMP $end
$var reg 1 ( MemRead $end
$var reg 1 " MemWrite $end
$var reg 1 P MemtoReg $end
$var reg 2 ." PCSource [1:0] $end
$var reg 1 M PCWrite $end
$var reg 1 L PCWriteCond $end
$var reg 1 K RegDst $end
$var reg 1 J RegWrite $end
$var reg 1 F branch_equal $end
$var reg 1 D fixed_shift $end
$var reg 1 2 unsign $end
$upscope $end
$scope module data_selection_endian_conversion $end
$var wire 32 /" ALUOut [31:0] $end
$var wire 1 S IorD $end
$var wire 1 , clk $end
$var wire 6 0" opcode [5:0] $end
$var wire 1 4 stall $end
$var wire 32 1" writedata_non_processed [31:0] $end
$var wire 3 2" state [2:0] $end
$var wire 32 3" readdata_non_processed [31:0] $end
$var wire 32 4" address [31:0] $end
$var wire 32 5" PC [31:0] $end
$var reg 4 6" byteenable [3:0] $end
$var reg 4 7" byteenable_read [3:0] $end
$var reg 32 8" readdata_processed [31:0] $end
$var reg 32 9" writedata_processed [31:0] $end
$upscope $end
$scope module pc1 $end
$var wire 1 :" PCWriteCond $end
$var wire 1 , clk $end
$var wire 1 M pcctl $end
$var wire 1 - reset $end
$var wire 1 4 stall $end
$var wire 3 ;" state [2:0] $end
$var wire 32 <" pc_prev [31:0] $end
$var reg 1 + active $end
$var reg 32 =" branch_reg [31:0] $end
$var reg 32 >" pc_branch_address_reg [31:0] $end
$var reg 32 ?" pc_new [31:0] $end
$upscope $end
$scope module pcmux $end
$var wire 32 @" ALUOut [31:0] $end
$var wire 32 A" ALU_result [31:0] $end
$var wire 2 B" PCSource [1:0] $end
$var wire 32 C" PC_in [31:0] $end
$var wire 16 D" instr15_0 [15:0] $end
$var wire 5 E" instr20_16 [4:0] $end
$var wire 5 F" instr25_21 [4:0] $end
$var reg 32 G" Jump_address [31:0] $end
$var reg 32 H" PC_out [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 J RegWrite $end
$var wire 1 , clk $end
$var wire 32 I" instr [31:0] $end
$var wire 5 J" readR1 [4:0] $end
$var wire 5 K" readR2 [4:0] $end
$var wire 32 L" readdata1 [31:0] $end
$var wire 32 M" readdata2 [31:0] $end
$var wire 32 N" register_v0 [31:0] $end
$var wire 1 - reset $end
$var wire 5 O" writeR [4:0] $end
$var wire 32 P" writedata [31:0] $end
$var wire 3 Q" state [2:0] $end
$var wire 6 R" regimm_rt [5:0] $end
$var wire 6 S" opcode [5:0] $end
$var wire 6 T" func_code [5:0] $end
$scope begin $unm_blk_220 $end
$var integer 32 U" i [31:0] $end
$upscope $end
$upscope $end
$scope module stm $end
$var wire 1 , clk $end
$var wire 1 - reset $end
$var wire 1 4 stall $end
$var reg 3 V" state [2:0] $end
$upscope $end
$upscope $end
$scope module ram $end
$var wire 32 W" address [31:0] $end
$var wire 4 X" byteenable [3:0] $end
$var wire 1 , clk $end
$var wire 1 ( read $end
$var wire 1 " write $end
$var wire 32 Y" writedata [31:0] $end
$var wire 8 Z" writedata_3 [7:0] $end
$var wire 8 [" writedata_2 [7:0] $end
$var wire 8 \" writedata_1 [7:0] $end
$var wire 8 ]" writedata_0 [7:0] $end
$var wire 32 ^" word_address [31:0] $end
$var wire 32 _" readdata_temp [31:0] $end
$var wire 8 `" readdata_3 [7:0] $end
$var wire 8 a" readdata_2 [7:0] $end
$var wire 8 b" readdata_1 [7:0] $end
$var wire 8 c" readdata_0 [7:0] $end
$var reg 32 d" readdata [31:0] $end
$var reg 1 # waitrequest $end
$scope begin $unm_blk_239 $end
$var integer 32 e" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1100100 e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
b0xxxxx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx00 G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
0:"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
b0 -"
b0 ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx00 v
bx u
b0 t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
b0 h
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx g
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
1]
b0 \
bx [
bx Z
b0 Y
bx X
bx W
bx V
bx U
0T
0S
0R
bx Q
0P
bx O
bx N
0M
0L
0K
0J
bx I
bx H
bx G
0F
bx E
0D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
04
bx 3
02
bx 1
x0
bx /
b1 .
0-
0,
x+
bx *
bx )
0(
bx '
bx &
bx %
bx $
x#
0"
bx !
$end
#5
1#
1,
#10
1-
0,
#15
b0 I
b0 P"
b1111000 `"
b1101111 a"
b11 b"
b111100 c"
b0 U
b0 /"
00
b0 V
b0 ~
b111100000000110110111101111000 _"
b0 H
b0 O"
b0 }
b10111111110000000000000000000100 <
b10111111110000000000000000000100 <"
b10111111110000000000000000000100 H"
b10111111110000000000000000000100 Z
b10111111110000000000000000000100 j
b10111111110000000000000000000100 A"
b0 ^"
b0 )"
b0 ("
b0 *"
b0 0"
b0 q
b0 8
b0 L"
b0 ;
b0 J"
b0 7
b0 r
b0 M"
b0 :
b0 K"
b0 z
b0 y
b0 F"
b0 E"
b0 D"
b0 S"
b0 T"
b0 R"
b10111111110000000000000000000000 g
b10111111110000000000000000000000 _
b10111111110000000000000000000000 c
b100 f
b100 ^
b100 e
b100 u
b0 v
b0 w
b10111111110000000000000000000000 *
b10111111110000000000000000000000 G
b10111111110000000000000000000000 4"
b10111111110000000000000000000000 W"
b10110000000000000000000000000000 G"
b0 X
b0 I"
1(
b0 N
b0 ."
b0 B"
1M
b1 \
b1 t
b1 ,"
0]
b1111 )
b1111 E
b1111 6"
b1111 X"
b0 %
b0 5
b0 N"
0#
b0 `
b0 @"
b0 b
b0 1"
b0 a
b0 {
b0 W
b0 !"
b0 Q
b0 ""
b0 A
b0 s
b0 $"
b0 ?
b0 %"
b0 >
b0 &"
b0 C
b0 =
b0 '"
b0 >"
b10111111110000000000000000000000 O
b10111111110000000000000000000000 5"
b10111111110000000000000000000000 ?"
b10111111110000000000000000000000 C"
1+
b0 $
b0 /
b0 3
b0 |
b0 +"
b0 2"
b0 ;"
b0 Q"
b0 V"
b100000 U"
1,
#20
0-
0,
#25
b10001 `"
b0 a"
b1100000 b"
b0 c"
b11 H
b11 O"
b1111 }
b11000000000000000010001 _"
b10111111110000000000000000001000 <
b10111111110000000000000000001000 <"
b10111111110000000000000000001000 H"
b10110000000011011011110111100000 G"
b1111 )"
b111000 ("
b11 *"
b1111 0"
b1111 q
b11 :
b11 K"
b1111 z
b111000 y
b11 E"
b110111101111000 D"
b1111 S"
b111000 T"
b11 R"
b1 ^"
b10111111110000000000000000001000 Z
b10111111110000000000000000001000 j
b10111111110000000000000000001000 A"
b10111111110000000000000000000100 I
b10111111110000000000000000000100 P"
b1101 @
b11101 B
b11101 d
b111100000000110110111101111000 X
b111100000000110110111101111000 I"
1T
0(
0M
b1 \
b1 t
b1 ,"
0]
b10111111110000000000000000000100 *
b10111111110000000000000000000100 G
b10111111110000000000000000000100 4"
b10111111110000000000000000000100 W"
b10111111110000000000000000000100 g
b10111111110000000000000000000100 _
b10111111110000000000000000000100 c
b10111111110000000000000000000100 U
b10111111110000000000000000000100 /"
b111100000000110110111101111000 &
b111100000000110110111101111000 6
b111100000000110110111101111000 #"
b111100000000110110111101111000 8"
b1 $
b1 /
b1 3
b1 |
b1 +"
b1 2"
b1 ;"
b1 Q"
b1 V"
b10111111110000000000000000000100 O
b10111111110000000000000000000100 5"
b10111111110000000000000000000100 ?"
b10111111110000000000000000000100 C"
b1111 7"
b10111111110000000000000000000100 `
b10111111110000000000000000000100 @"
b1111000011011110000001100111100 '
b1111000011011110000001100111100 9
b1111000011011110000001100111100 3"
b1111000011011110000001100111100 d"
1,
#30
0,
#35
b1101111011110000000000000000000 <
b1101111011110000000000000000000 <"
b1101111011110000000000000000000 H"
b10111111110000000000000000001000 I
b10111111110000000000000000001000 P"
b1101111011110000000000000000000 Z
b1101111011110000000000000000000 j
b1101111011110000000000000000000 A"
b0 g
b0 _
b0 c
b10111111110000000000000000001000 U
b10111111110000000000000000001000 /"
b1101111011110000000000000000000 f
b1101111011110000000000000000000 ^
b1101111011110000000000000000000 e
b1101111011110000000000000000000 u
b10111101111000000000000000000000 v
b1101111011110000000000000000000 w
0T
b10 \
b10 t
b10 ,"
1]
b10111111110000000000000000001000 `
b10111111110000000000000000001000 @"
b110111101111000 A
b110111101111000 s
b110111101111000 $"
b11 ?
b11 %"
b111100000000110110111101111000 C
b1111 =
b1111 '"
b10 $
b10 /
b10 3
b10 |
b10 +"
b10 2"
b10 ;"
b10 Q"
b10 V"
1,
#40
0,
#45
10
b0 <
b0 <"
b0 H"
b0 Z
b0 j
b0 A"
b0 f
b0 ^
b0 e
b0 u
b1101111011110000000000000000000 I
b1101111011110000000000000000000 P"
1J
b0 \
b0 t
b0 ,"
b1101111011110000000000000000000 U
b1101111011110000000000000000000 /"
b11 $
b11 /
b11 3
b11 |
b11 +"
b11 2"
b11 ;"
b11 Q"
b11 V"
b1101111011110000000000000000000 `
b1101111011110000000000000000000 @"
1#
1,
#50
0,
#55
00
b1101111011110000000000000000000 <
b1101111011110000000000000000000 <"
b1101111011110000000000000000000 H"
b1101111011110000000000000000000 Z
b1101111011110000000000000000000 j
b1101111011110000000000000000000 A"
b0 I
b0 P"
b1101111011110000000000000000000 f
b1101111011110000000000000000000 ^
b1101111011110000000000000000000 e
b1101111011110000000000000000000 u
bx &
b0 U
b0 /"
0J
b1101111011110000000000000000000 7
b1101111011110000000000000000000 r
b1101111011110000000000000000000 M"
bx '
bx 9
bx 3"
bx d"
b0 `
b0 @"
b100 $
b100 /
b100 3
b100 |
b100 +"
b100 2"
b100 ;"
b100 Q"
b100 V"
1,
#60
b10 .
0,
#65
b10111111110000000000000000001000 <
b10111111110000000000000000001000 <"
b10111111110000000000000000001000 H"
b10111111110000000000000000001000 Z
b10111111110000000000000000001000 j
b10111111110000000000000000001000 A"
b100 f
b100 ^
b100 e
b100 u
b10111111110000000000000000000100 g
b10111111110000000000000000000100 _
b10111111110000000000000000000100 c
b1101111011110000000000000000000 I
b1101111011110000000000000000000 P"
bx @
bx B
bx d
1(
1M
b1 \
b1 t
b1 ,"
0]
b1101111011110000000000000000000 U
b1101111011110000000000000000000 /"
bx 6
bx #"
bx 8"
b0 $
b0 /
b0 3
b0 |
b0 +"
b0 2"
b0 ;"
b0 Q"
b0 V"
b1101111011110000000000000000000 `
b1101111011110000000000000000000 @"
b1101111011110000000000000000000 b
b1101111011110000000000000000000 1"
0#
1,
#70
0,
#75
b1000 `"
b0 b"
b1000 _"
b0 H
b0 O"
b11011110111100000 v
b110111101111000 w
b10001 }
b10111111110000000000000000001100 <
b10111111110000000000000000001100 <"
b10111111110000000000000000001100 H"
b10110001100000000000000001000100 G"
b10111111110000000000000000001000 I
b10111111110000000000000000001000 P"
b10 ^"
b10111111110000000000000000001100 Z
b10111111110000000000000000001100 j
b10111111110000000000000000001100 A"
b0 )"
b10001 ("
b0 *"
b0 0"
b0 q
b1101111011110000000000000000000 8
b1101111011110000000000000000000 L"
b11 ;
b11 J"
b0 7
b0 r
b0 M"
b0 :
b0 K"
b0 z
b10001 y
b11 F"
b0 E"
b10001 D"
b0 S"
b10001 T"
b0 R"
b0 @
b0 B
b0 d
b11000000000000000010001 &
b10111111110000000000000000001000 U
b10111111110000000000000000001000 /"
b10111111110000000000000000001000 *
b10111111110000000000000000001000 G
b10111111110000000000000000001000 4"
b10111111110000000000000000001000 W"
b10111111110000000000000000001000 g
b10111111110000000000000000001000 _
b10111111110000000000000000001000 c
b11000000000000000010001 X
b11000000000000000010001 I"
1T
0(
0M
b1 \
b1 t
b1 ,"
0]
b11000000000000000010001 6
b11000000000000000010001 #"
b11000000000000000010001 8"
b10001000000000110000000000000 '
b10001000000000110000000000000 9
b10001000000000110000000000000 3"
b10001000000000110000000000000 d"
b10111111110000000000000000001000 `
b10111111110000000000000000001000 @"
b10111111110000000000000000001000 O
b10111111110000000000000000001000 5"
b10111111110000000000000000001000 ?"
b10111111110000000000000000001000 C"
b1 $
b1 /
b1 3
b1 |
b1 +"
b1 2"
b1 ;"
b1 Q"
b1 V"
1,
#80
0,
#85
b1101111011110000000000000000000 <
b1101111011110000000000000000000 <"
b1101111011110000000000000000000 H"
b1101111011110000000000000000000 Z
b1101111011110000000000000000000 j
b1101111011110000000000000000000 A"
b0 f
b0 ^
b0 e
b0 u
b1101111011110000000000000000000 g
b1101111011110000000000000000000 _
b1101111011110000000000000000000 c
b10111111110000000000000000001100 I
b10111111110000000000000000001100 P"
0T
b0 \
b0 t
b0 ,"
1]
b1000100 v
b10001 w
b10111111110000000000000000001100 U
b10111111110000000000000000001100 /"
b10 $
b10 /
b10 3
b10 |
b10 +"
b10 2"
b10 ;"
b10 Q"
b10 V"
b10001 A
b10001 s
b10001 $"
b0 ?
b0 %"
b11 >
b11 &"
b11000000000000000010001 C
b0 =
b0 '"
b10111111110000000000000000001100 `
b10111111110000000000000000001100 @"
b0 b
b0 1"
b1101111011110000000000000000000 a
b1101111011110000000000000000000 {
1#
1,
#90
0,
#95
b1101111011110000000000000000000 I
b1101111011110000000000000000000 P"
bx &
b1101111011110000000000000000000 U
b1101111011110000000000000000000 /"
bx '
bx 9
bx 3"
bx d"
b1101111011110000000000000000000 `
b1101111011110000000000000000000 @"
b1101111011110000000000000000000 W
b1101111011110000000000000000000 !"
b11 $
b11 /
b11 3
b11 |
b11 +"
b11 2"
b11 ;"
b11 Q"
b11 V"
1,
#100
0,
#105
b100 $
b100 /
b100 3
b100 |
b100 +"
b100 2"
b100 ;"
b100 Q"
b100 V"
1,
#110
b11 .
0,
#115
b10111111110000000000000000001100 <
b10111111110000000000000000001100 <"
b10111111110000000000000000001100 H"
14
b10111111110000000000000000001100 Z
b10111111110000000000000000001100 j
b10111111110000000000000000001100 A"
b100 f
b100 ^
b100 e
b100 u
b10111111110000000000000000001000 g
b10111111110000000000000000001000 _
b10111111110000000000000000001000 c
bx @
bx B
bx d
1(
1M
b1 \
b1 t
b1 ,"
0]
bx 6
bx #"
bx 8"
b0 $
b0 /
b0 3
b0 |
b0 +"
b0 2"
b0 ;"
b0 Q"
b0 V"
1,
#120
0,
#125
1,
#130
0,
#135
1,
#140
0,
#145
1,
#150
0,
#155
04
0#
1,
#160
0,
#165
b10000 `"
b10000 a"
b1000 }
b1000000010000 _"
b10111111110000000000000000010000 <
b10111111110000000000000000010000 <"
b10111111110000000000000000010000 H"
b10110000000000000000000000100000 G"
b1000 ("
b0 8
b0 L"
b0 ;
b0 J"
b1000 y
b0 F"
b1000 D"
b1000 T"
b11 ^"
b10111111110000000000000000010000 Z
b10111111110000000000000000010000 j
b10111111110000000000000000010000 A"
b10111111110000000000000000001100 I
b10111111110000000000000000001100 P"
b0 @
b0 B
b0 d
b1000 X
b1000 I"
1T
0(
0M
b1 \
b1 t
b1 ,"
0]
b10111111110000000000000000001100 *
b10111111110000000000000000001100 G
b10111111110000000000000000001100 4"
b10111111110000000000000000001100 W"
b10111111110000000000000000001100 g
b10111111110000000000000000001100 _
b10111111110000000000000000001100 c
b10111111110000000000000000001100 U
b10111111110000000000000000001100 /"
b1000 &
b1000 6
b1000 #"
b1000 8"
b1 $
b1 /
b1 3
b1 |
b1 +"
b1 2"
b1 ;"
b1 Q"
b1 V"
b10111111110000000000000000001100 O
b10111111110000000000000000001100 5"
b10111111110000000000000000001100 ?"
b10111111110000000000000000001100 C"
b10111111110000000000000000001100 `
b10111111110000000000000000001100 @"
b1000000000000000000000000000 '
b1000000000000000000000000000 9
b1000000000000000000000000000 3"
b1000000000000000000000000000 d"
1,
#170
0,
#175
10
b0 <
b0 <"
b0 H"
b10111111110000000000000000010000 I
b10111111110000000000000000010000 P"
b0 Z
b0 j
b0 A"
b0 g
b0 _
b0 c
b10111111110000000000000000010000 U
b10111111110000000000000000010000 /"
b0 f
b0 ^
b0 e
b0 u
b100000 v
b1000 w
0T
b0 \
b0 t
b0 ,"
1]
b10111111110000000000000000010000 `
b10111111110000000000000000010000 @"
b0 a
b0 {
b1000 A
b1000 s
b1000 $"
b1000 C
b0 >
b0 &"
b10 $
b10 /
b10 3
b10 |
b10 +"
b10 2"
b10 ;"
b10 Q"
b10 V"
1,
#180
0,
#185
1:"
b0 I
b0 P"
1R
b1 N
b1 ."
b1 B"
b0 U
b0 /"
b11 $
b11 /
b11 3
b11 |
b11 +"
b11 2"
b11 ;"
b11 Q"
b11 V"
b0 `
b0 @"
1#
1,
#190
0,
#195
0:"
bx &
0R
bx '
bx 9
bx 3"
bx d"
0#
b1 ="
b100 $
b100 /
b100 3
b100 |
b100 +"
b100 2"
b100 ;"
b100 Q"
b100 V"
1,
#200
b100 .
0,
#205
00
b10111111110000000000000000010000 <
b10111111110000000000000000010000 <"
b10111111110000000000000000010000 H"
b10111111110000000000000000010000 Z
b10111111110000000000000000010000 j
b10111111110000000000000000010000 A"
b100 f
b100 ^
b100 e
b100 u
b10111111110000000000000000001100 g
b10111111110000000000000000001100 _
b10111111110000000000000000001100 c
bx @
bx B
bx d
1(
b0 N
b0 ."
b0 B"
1M
b1 \
b1 t
b1 ,"
0]
bx 6
bx #"
bx 8"
b0 $
b0 /
b0 3
b0 |
b0 +"
b0 2"
b0 ;"
b0 Q"
b0 V"
1,
#210
0,
#215
b0 `"
b0 a"
b1 V
b1 ~
b0 _"
b10000 }
b10111111110000000000000000010100 <
b10111111110000000000000000010100 <"
b10111111110000000000000000010100 H"
b10110000000000000100000001000000 G"
b1101111011110000000000000000000 I
b1101111011110000000000000000000 P"
b100 ^"
b10111111110000000000000000010100 Z
b10111111110000000000000000010100 j
b10111111110000000000000000010100 A"
b10000 ("
b10000 y
b1000000010000 D"
b10000 T"
b10 @
b0 B
b0 d
b1000000010000 &
04
b1101111011110000000000000000000 U
b1101111011110000000000000000000 /"
b10111111110000000000000000010000 *
b10111111110000000000000000010000 G
b10111111110000000000000000010000 4"
b10111111110000000000000000010000 W"
b10111111110000000000000000010000 g
b10111111110000000000000000010000 _
b10111111110000000000000000010000 c
b1000000010000 X
b1000000010000 I"
1T
0(
0M
b1 \
b1 t
b1 ,"
0]
b1000000010000 6
b1000000010000 #"
b1000000010000 8"
b10000000100000000000000000000 '
b10000000100000000000000000000 9
b10000000100000000000000000000 3"
b10000000100000000000000000000 d"
1#
b10111111110000000000000000010000 `
b10111111110000000000000000010000 @"
b10111111110000000000000000010000 O
b10111111110000000000000000010000 5"
b10111111110000000000000000010000 ?"
b10111111110000000000000000010000 C"
b1 $
b1 /
b1 3
b1 |
b1 +"
b1 2"
b1 ;"
b1 Q"
b1 V"
1,
#220
0,
#225
10
b0 <
b0 <"
b0 H"
b0 Z
b0 j
b0 A"
b0 f
b0 ^
b0 e
b0 u
b0 g
b0 _
b0 c
0T
b0 \
b0 t
b0 ,"
1]
b100000001000000 v
b1000000010000 w
bx &
b10 $
b10 /
b10 3
b10 |
b10 +"
b10 2"
b10 ;"
b10 Q"
b10 V"
b1000000010000 C
b1000000010000 A
b1000000010000 s
b1000000010000 $"
b10111111110000000000000000010100 `
b10111111110000000000000000010100 @"
bx '
bx 9
bx 3"
bx d"
1,
#230
0,
#235
b10 H
b10 O"
1K
1J
0#
b0 `
b0 @"
b11 $
b11 /
b11 3
b11 |
b11 +"
b11 2"
b11 ;"
b11 Q"
b11 V"
1,
#240
0,
#245
b0 `"
b0 a"
b0 b"
b0 c"
b0 H
b0 O"
b0 ^"
b0 _"
0J
0K
b0 *
b0 G
b0 4"
b0 W"
b100000001000000 G"
b1101111011110000000000000000000 %
b1101111011110000000000000000000 5
b1101111011110000000000000000000 N"
b100 $
b100 /
b100 3
b100 |
b100 +"
b100 2"
b100 ;"
b100 Q"
b100 V"
b0 ="
b0 O
b0 5"
b0 ?"
b0 C"
1,
#250
b101 .
0,
#255
00
b100 <
b100 <"
b100 H"
b100 Z
b100 j
b100 A"
b100 f
b100 ^
b100 e
b100 u
bx @
bx B
bx d
1(
1M
b1 \
b1 t
b1 ,"
0]
bx 6
bx #"
bx 8"
0+
b0 $
b0 /
b0 3
b0 |
b0 +"
b0 2"
b0 ;"
b0 Q"
b0 V"
1,
#260
0,
